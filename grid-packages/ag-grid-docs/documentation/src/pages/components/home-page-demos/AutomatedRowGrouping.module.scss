@use '../../../design-system' as *;

:global(.automated-row-grouping-grid.ag-theme-alpine-dark) {
    position: relative;

    svg[class*='logo-mark'] {
        position: absolute;
        display: block;
        width: 64px * 2;
        height: 48px * 2;
        top: 50%;
        left: 50%;
        transform: translate(-60px, -48px);
    }

    // Button overrides for for .ag-styles specificity
    :global(button.ag-side-button-button) {
        // Inherit text styles
        color: inherit;
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
        line-height: inherit;

        // Button styles
        background: transparent;
        padding: calc(var(--ag-grid-size) * 2) 0 calc(var(--ag-grid-size) * 2) 0;
        width: 100%;
        margin: 0;
        min-height: calc(var(--ag-grid-size) * 18);
        background-position-y: center;
        background-position-x: center;
        background-repeat: no-repeat;

        border: none;
        border-top: var(--ag-borders-side-button) var(--ag-border-color);
        border-bottom: var(--ag-borders-side-button) var(--ag-border-color);
        $border-top-color: transparent;
        $border-bottom-color: transparent;

        &:focus {
            box-shadow: none;
        }
    }
}

.debugPanel {
    position: fixed;
    top: 0;
    right: 0;
    width: 200px;
    height: 7.5rem;
    border-left: 1px solid var(--border-color);
    border-bottom: 1px solid var(--border-color);
    background-color: rgba(255, 255, 255, 0.85);
    padding: $size-2;

    :global(.state) {
        &::before {
            content: 'State: ';
            color: var(--dull-light-gray);
        }
    }

    :global(.paused-state) {
        &::before {
            content: 'Paused at: ';
            color: var(--dull-light-gray);
        }
    }

    :global(.draw-checkbox) {
        margin-top: $size-1;
        cursor: pointer;
    }
}

.debugCanvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 100;
}

.mouseMask {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    margin: 41px 1rem 1rem;
    overflow: hidden;
    z-index: 10000;
    pointer-events: none;

    // Start off hidden
    opacity: 0;

    :global(.mouse) {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1000;
    }

    :global(.highlight) {
        opacity: 0.15;
    }

    :global(.animate-click) {
        transform-origin: 50% calc(50% - 1px);
        opacity: 0;
        transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;
    }

    &:global(.animate .animate-click) {
        opacity: 0.3;
        transform: scale(12);
    }
}

.mouseCaptureMask {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1000;

    &:global(.hidden) {
        display: none;
    }
}
